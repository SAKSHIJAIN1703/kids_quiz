{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\neetu\\\\knowledge-quiz-version2\\\\src\\\\components\\\\quizGeneral\\\\QuizGeneral.jsx\";\nimport { View, Text, SafeAreaView, StatusBar, Image, TouchableOpacity, Modal, Animated } from 'react-native';\nimport React, { useState } from 'react';\nimport { StQuizGeneral } from './QuizGeneralStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  var _s2 = $RefreshSig$();\n\n  const questions = [{\n    question: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://d.newsweek.com/en/full/1529160/elephant-appreciation-day-2019.jpg\",\n      alt: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 14\n    }, this),\n    options: [\"Jupiter\", \"Saturn\", \"Neptune\", \"Mercury\"],\n    correct_option: \"Jupiter\"\n  }, {\n    question: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://hddesktopwallpapers.in/wp-content/uploads/2015/09/cat-eyes-cute.jpg\",\n      alt: \"e\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 14\n    }, this),\n    options: [\"Chand Minar\", \"Taj Mahal\", \"Stadium\"],\n    correct_option: \"Taj Mahal\"\n  }, {\n    question: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://castlehorsefeeds.com/wp-content/uploads/2019/03/spring-horses.jpg\",\n      alt: \"r\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 14\n    }, this),\n    options: [\"Alligator\", \"Crocodile\", \"Baboon\", \"Hippo\"],\n    correct_option: \"Hippo\"\n  }, {\n    question: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://castlehorsefeeds.com/wp-content/uploads/2019/03/spring-horses.jpg\",\n      alt: \"r\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this),\n    options: [\"The African elephant\", \"The blue whale\", \"The sperm whale\", \"The giant squid\"],\n    correct_option: \"The blue whale\"\n  }, {\n    question: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://www.hdnicewallpapers.com/Walls/Big/Lion/Lion_in_Gir_Forest_National_Park_India.jpg\",\n      alt: \"o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 14\n    }, this),\n    options: [\"The bat\", \"The flying squirrel\", \"The bald eagle\", \"The colugo\"],\n    correct_option: \"The bat\"\n  }]; // \t{\n  // \t\tquestionText: <img src=\"https://d.newsweek.com/en/full/1529160/elephant-appreciation-day-2019.jpg\" alt=\"error\"></img>,\n  // \t\tanswerOptions: [\n  // \t\t\t{ answerText: 'cat', isCorrect: false },\n  // \t\t\t{ answerText: 'dog', isCorrect: false },\n  // \t\t\t{ answerText: 'elephant', isCorrect: true },\n  // \t\t\t{ answerText: 'lion', isCorrect: false },\n  // \t\t],\n  // \t},\n  // \t{\n  // \t\tquestionText: <img src=\"https://hddesktopwallpapers.in/wp-content/uploads/2015/09/cat-eyes-cute.jpg\" alt=\"e\"></img>,\n  // \t\tanswerOptions: [\n  // \t\t\t{ answerText: 'lion', isCorrect: false },\n  // \t\t\t{ answerText: 'cat', isCorrect: true },\n  // \t\t\t{ answerText: 'horse', isCorrect: false },\n  // \t\t\t{ answerText: 'dog', isCorrect: false },\n  // \t\t],\n  // \t},\n  // \t{\n  // \t\tquestionText: <img src=\"https://castlehorsefeeds.com/wp-content/uploads/2019/03/spring-horses.jpg\" alt=\"r\"></img>,\n  // \t\tanswerOptions: [\n  // \t\t\t{ answerText: 'horse', isCorrect: true },\n  // \t\t\t{ answerText: 'dog', isCorrect: false },\n  // \t\t\t{ answerText: 'cat', isCorrect: false },\n  // \t\t\t{ answerText: 'lion', isCorrect: false },\n  // \t\t],\n  // \t},\n  // \t{\n  // \t\tquestionText: <img src=\"https://www.hdnicewallpapers.com/Walls/Big/Lion/Lion_in_Gir_Forest_National_Park_India.jpg\" alt=\"o\"></img>,\n  // \t\tanswerOptions: [\n  // \t\t\t{ answerText: 'cat', isCorrect: false },\n  // \t\t\t{ answerText: 'horse', isCorrect: false },\n  // \t\t\t{ answerText: 'dog', isCorrect: false },\n  // \t\t\t{ answerText: 'lion', isCorrect: true },\n  // \t\t],\n  // \t},\n  // ];\n  // const [currentQuestion, setCurrentQuestion] = useState(0);\n  // const [showScore, setShowScore] = useState(false);\n  // const [score, setScore] = useState(0);\n  // const handleAnswerOptionClick = (isCorrect) => {\n  // \tif (isCorrect) {\n  // \t\tsetScore(score + 1);\n  // \t}\n  // \tconst nextQuestion = currentQuestion + 1;\n  // \tif (nextQuestion < questions.length) {\n  // \t\tsetCurrentQuestion(nextQuestion);\n  // \t} else {\n  // \t\tsetShowScore(true);\n  // \t}\n  // };\n\n  const Quiz = () => {\n    _s2();\n\n    var _s = $RefreshSig$();\n\n    const allQuestions = data;\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [currentOptionSelected, setCurrentOptionSelected] = useState(null);\n    const [correctOption, setCorrectOption] = useState(null);\n    const [isOptionsDisabled, setIsOptionsDisabled] = useState(false);\n    const [score, setScore] = useState(0);\n    const [showNextButton, setShowNextButton] = useState(false);\n    const [showScoreModal, setShowScoreModal] = useState(false);\n\n    const validateAnswer = selectedOption => {\n      let correct_option = allQuestions[currentQuestionIndex]['correct_option'];\n      setCurrentOptionSelected(selectedOption);\n      setCorrectOption(correct_option);\n      setIsOptionsDisabled(true);\n\n      if (selectedOption == correct_option) {\n        // Set Score\n        setScore(score + 1);\n      } // Show Next Button\n\n\n      setShowNextButton(true);\n    };\n\n    const handleNext = () => {\n      if (currentQuestionIndex == allQuestions.length - 1) {\n        // Last Question\n        // Show Score Modal\n        setShowScoreModal(true);\n      } else {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setCurrentOptionSelected(null);\n        setCorrectOption(null);\n        setIsOptionsDisabled(false);\n        setShowNextButton(false);\n      }\n\n      Animated.timing(progress, {\n        toValue: currentQuestionIndex + 1,\n        duration: 1000,\n        useNativeDriver: false\n      }).start();\n    };\n\n    const restartQuiz = () => {\n      setShowScoreModal(false);\n      setCurrentQuestionIndex(0);\n      setScore(0);\n      setCurrentOptionSelected(null);\n      setCorrectOption(null);\n      setIsOptionsDisabled(false);\n      setShowNextButton(false);\n      Animated.timing(progress, {\n        toValue: 0,\n        duration: 1000,\n        useNativeDriver: false\n      }).start();\n    };\n\n    const Quiz = () => {\n      _s();\n\n      const allQuestions = data;\n      const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n      const [currentOptionSelected, setCurrentOptionSelected] = useState(null);\n      const [correctOption, setCorrectOption] = useState(null);\n      const [isOptionsDisabled, setIsOptionsDisabled] = useState(false);\n      const [score, setScore] = useState(0);\n      const [showNextButton, setShowNextButton] = useState(false);\n      const [showScoreModal, setShowScoreModal] = useState(false);\n\n      const validateAnswer = selectedOption => {\n        let correct_option = allQuestions[currentQuestionIndex]['correct_option'];\n        setCurrentOptionSelected(selectedOption);\n        setCorrectOption(correct_option);\n        setIsOptionsDisabled(true);\n\n        if (selectedOption == correct_option) {\n          // Set Score\n          setScore(score + 1);\n        } // Show Next Button\n\n\n        setShowNextButton(true);\n      };\n\n      const handleNext = () => {\n        if (currentQuestionIndex == allQuestions.length - 1) {\n          // Last Question\n          // Show Score Modal\n          setShowScoreModal(true);\n        } else {\n          setCurrentQuestionIndex(currentQuestionIndex + 1);\n          setCurrentOptionSelected(null);\n          setCorrectOption(null);\n          setIsOptionsDisabled(false);\n          setShowNextButton(false);\n        }\n\n        Animated.timing(progress, {\n          toValue: currentQuestionIndex + 1,\n          duration: 1000,\n          useNativeDriver: false\n        }).start();\n      };\n\n      const restartQuiz = () => {\n        setShowScoreModal(false);\n        setCurrentQuestionIndex(0);\n        setScore(0);\n        setCurrentOptionSelected(null);\n        setCorrectOption(null);\n        setIsOptionsDisabled(false);\n        setShowNextButton(false);\n        Animated.timing(progress, {\n          toValue: 0,\n          duration: 1000,\n          useNativeDriver: false\n        }).start();\n      };\n\n      const renderQuestion = () => {\n        var _allQuestions$current;\n\n        return /*#__PURE__*/_jsxDEV(View, {\n          style: {\n            marginVertical: 40\n          },\n          children: [/*#__PURE__*/_jsxDEV(View, {\n            style: {\n              flexDirection: 'row',\n              alignItems: 'flex-end'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              style: {\n                color: COLORS.white,\n                fontSize: 20,\n                opacity: 0.6,\n                marginRight: 2\n              },\n              children: currentQuestionIndex + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              style: {\n                color: COLORS.white,\n                fontSize: 18,\n                opacity: 0.6\n              },\n              children: [\"/ \", allQuestions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: {\n              color: COLORS.white,\n              fontSize: 30\n            },\n            children: (_allQuestions$current = allQuestions[currentQuestionIndex]) === null || _allQuestions$current === void 0 ? void 0 : _allQuestions$current.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 6\n        }, this);\n      };\n\n      const renderOptions = () => {\n        var _allQuestions$current2;\n\n        return /*#__PURE__*/_jsxDEV(View, {\n          children: (_allQuestions$current2 = allQuestions[currentQuestionIndex]) === null || _allQuestions$current2 === void 0 ? void 0 : _allQuestions$current2.options.map(option => /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n            onPress: () => validateAnswer(option),\n            disabled: isOptionsDisabled,\n            style: {\n              borderWidth: 3,\n              borderColor: option == correctOption ? COLORS.success : option == currentOptionSelected ? COLORS.error : COLORS.secondary + '40',\n              backgroundColor: option == correctOption ? COLORS.success + '20' : option == currentOptionSelected ? COLORS.error + '20' : COLORS.secondary + '20',\n              height: 60,\n              borderRadius: 20,\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              paddingHorizontal: 20,\n              marginVertical: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              style: {\n                fontSize: 20,\n                color: COLORS.white\n              },\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 10\n            }, this), option == correctOption ? /*#__PURE__*/_jsxDEV(View, {\n              style: {\n                width: 30,\n                height: 30,\n                borderRadius: 30 / 2,\n                backgroundColor: COLORS.success,\n                justifyContent: 'center',\n                alignItems: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(MaterialCommunityIcons, {\n                name: \"check\",\n                style: {\n                  color: COLORS.white,\n                  fontSize: 20\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 12\n            }, this) : option == currentOptionSelected ? /*#__PURE__*/_jsxDEV(View, {\n              style: {\n                width: 30,\n                height: 30,\n                borderRadius: 30 / 2,\n                backgroundColor: COLORS.error,\n                justifyContent: 'center',\n                alignItems: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(MaterialCommunityIcons, {\n                name: \"close\",\n                style: {\n                  color: COLORS.white,\n                  fontSize: 20\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 12\n            }, this) : null]\n          }, option, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 6\n        }, this);\n      };\n\n      const renderNextButton = () => {\n        if (showNextButton) {\n          return /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n            onPress: handleNext,\n            style: {\n              marginTop: 20,\n              width: '100%',\n              backgroundColor: COLORS.accent,\n              padding: 20,\n              borderRadius: 5\n            },\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              style: {\n                fontSize: 20,\n                color: COLORS.white,\n                textAlign: 'center'\n              },\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 7\n          }, this);\n        } else {\n          return null;\n        }\n      };\n\n      const [progress, setProgress] = useState(new Animated.Value(0));\n      const progressAnim = progress.interpolate({\n        inputRange: [0, allQuestions.length],\n        outputRange: ['0%', '100%']\n      });\n\n      const renderProgressBar = () => {\n        return /*#__PURE__*/_jsxDEV(View, {\n          style: {\n            width: '100%',\n            height: 20,\n            borderRadius: 20,\n            backgroundColor: '#00000020'\n          },\n          children: /*#__PURE__*/_jsxDEV(Animated.View, {\n            style: [{\n              height: 20,\n              borderRadius: 20,\n              backgroundColor: COLORS.accent\n            }, {\n              width: progressAnim\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 6\n        }, this);\n      };\n\n      return /*#__PURE__*/_jsxDEV(SafeAreaView, {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(StatusBar, {\n          barStyle: \"light-content\",\n          backgroundColor: COLORS.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(View, {\n          style: {\n            flex: 1,\n            paddingVertical: 40,\n            paddingHorizontal: 16,\n            backgroundColor: COLORS.background,\n            position: 'relative'\n          },\n          children: [renderProgressBar(), renderQuestion(), renderOptions(), renderNextButton(), /*#__PURE__*/_jsxDEV(Modal, {\n            animationType: \"slide\",\n            transparent: true,\n            visible: showScoreModal,\n            children: /*#__PURE__*/_jsxDEV(View, {\n              style: {\n                flex: 1,\n                backgroundColor: COLORS.primary,\n                alignItems: 'center',\n                justifyContent: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(View, {\n                style: {\n                  backgroundColor: COLORS.white,\n                  width: '90%',\n                  borderRadius: 20,\n                  padding: 20,\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  style: {\n                    fontSize: 30,\n                    fontWeight: 'bold'\n                  },\n                  children: score > allQuestions.length / 2 ? 'Congratulations!' : 'Oops!'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(View, {\n                  style: {\n                    flexDirection: 'row',\n                    justifyContent: 'flex-start',\n                    alignItems: 'center',\n                    marginVertical: 20\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    style: {\n                      fontSize: 30,\n                      color: score > allQuestions.length / 2 ? COLORS.success : COLORS.error\n                    },\n                    children: score\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    style: {\n                      fontSize: 20,\n                      color: COLORS.black\n                    },\n                    children: [\"/ \", allQuestions.length]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n                  onPress: restartQuiz,\n                  style: {\n                    backgroundColor: COLORS.accent,\n                    padding: 20,\n                    width: '100%',\n                    borderRadius: 20\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Text, {\n                    style: {\n                      textAlign: 'center',\n                      color: COLORS.white,\n                      fontSize: 20\n                    },\n                    children: \"Retry Quiz\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 12\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Image // source={require('')}\n          , {\n            style: {\n              width: SIZES.width,\n              height: 130,\n              zIndex: -1,\n              position: 'absolute',\n              bottom: 0,\n              left: 0,\n              right: 0,\n              opacity: 0.5\n            },\n            resizeMode: 'contain'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 7\n      }, this);\n    };\n\n    _s(Quiz, \"VIMmmoqDs2ZT9L80uvOQKGLm4t4=\");\n  };\n\n  _s2(Quiz, \"ZTZAHCJliVRttbxI6QRzEQJ9fF4=\");\n}\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/neetu/knowledge-quiz-version2/src/components/quizGeneral/QuizGeneral.jsx"],"names":["View","Text","SafeAreaView","StatusBar","Image","TouchableOpacity","Modal","Animated","React","useState","StQuizGeneral","App","questions","question","options","correct_option","Quiz","allQuestions","data","currentQuestionIndex","setCurrentQuestionIndex","currentOptionSelected","setCurrentOptionSelected","correctOption","setCorrectOption","isOptionsDisabled","setIsOptionsDisabled","score","setScore","showNextButton","setShowNextButton","showScoreModal","setShowScoreModal","validateAnswer","selectedOption","handleNext","length","timing","progress","toValue","duration","useNativeDriver","start","restartQuiz","renderQuestion","marginVertical","flexDirection","alignItems","color","COLORS","white","fontSize","opacity","marginRight","renderOptions","map","option","borderWidth","borderColor","success","error","secondary","backgroundColor","height","borderRadius","justifyContent","paddingHorizontal","width","renderNextButton","marginTop","accent","padding","textAlign","setProgress","Value","progressAnim","interpolate","inputRange","outputRange","renderProgressBar","flex","primary","paddingVertical","background","position","fontWeight","black","SIZES","zIndex","bottom","left","right"],"mappings":"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","sourcesContent":["\nimport { View, Text, SafeAreaView, StatusBar, Image, TouchableOpacity, Modal, Animated } from 'react-native'\nimport React, { useState } from 'react';\nimport { StQuizGeneral } from './QuizGeneralStyle';\nexport default function App() {\n\t const questions = [\n\t\t{\n\t\t\tquestion: <img src=\"https://d.newsweek.com/en/full/1529160/elephant-appreciation-day-2019.jpg\" alt=\"error\"></img>,\n\t\t\toptions: [\"Jupiter\",\"Saturn\",\"Neptune\",\"Mercury\"],\n\t\t\tcorrect_option: \"Jupiter\"\n\t\t},\n\t\t{\n\t\t\tquestion: <img src=\"https://hddesktopwallpapers.in/wp-content/uploads/2015/09/cat-eyes-cute.jpg\" alt=\"e\"></img> ,\n\t\t\toptions: [\"Chand Minar\",\"Taj Mahal\",\"Stadium\"],\n\t\t\tcorrect_option: \"Taj Mahal\"\n\t\t},\n\t\t{\n\t\t\tquestion: <img src=\"https://castlehorsefeeds.com/wp-content/uploads/2019/03/spring-horses.jpg\" alt=\"r\"></img>,\n\t\t\toptions: [\"Alligator\",\"Crocodile\",\"Baboon\",\"Hippo\"],\n\t\t\tcorrect_option: \"Hippo\"\n\t\t},\n\t\t{\n\t\t\tquestion:<img src=\"https://castlehorsefeeds.com/wp-content/uploads/2019/03/spring-horses.jpg\" alt=\"r\"></img>,\n\t\t\toptions: [\"The African elephant\",\"The blue whale\",\"The sperm whale\",\"The giant squid\"],\n\t\t\tcorrect_option: \"The blue whale\"\n\t\t},\n\t\t{\n\t\t\tquestion: <img src=\"https://www.hdnicewallpapers.com/Walls/Big/Lion/Lion_in_Gir_Forest_National_Park_India.jpg\" alt=\"o\"></img>,\n\t\t\toptions: [\"The bat\",\"The flying squirrel\",\"The bald eagle\",\"The colugo\"],\n\t\t\tcorrect_option: \"The bat\"\n\t\t}\n\t]\n\t// \t{\n\t// \t\tquestionText: <img src=\"https://d.newsweek.com/en/full/1529160/elephant-appreciation-day-2019.jpg\" alt=\"error\"></img>,\n\t// \t\tanswerOptions: [\n\t// \t\t\t{ answerText: 'cat', isCorrect: false },\n\t// \t\t\t{ answerText: 'dog', isCorrect: false },\n\t// \t\t\t{ answerText: 'elephant', isCorrect: true },\n\t// \t\t\t{ answerText: 'lion', isCorrect: false },\n\t// \t\t],\n\t// \t},\n\t// \t{\n\t// \t\tquestionText: <img src=\"https://hddesktopwallpapers.in/wp-content/uploads/2015/09/cat-eyes-cute.jpg\" alt=\"e\"></img>,\n\t// \t\tanswerOptions: [\n\t// \t\t\t{ answerText: 'lion', isCorrect: false },\n\t// \t\t\t{ answerText: 'cat', isCorrect: true },\n\t// \t\t\t{ answerText: 'horse', isCorrect: false },\n\t// \t\t\t{ answerText: 'dog', isCorrect: false },\n\t// \t\t],\n\t// \t},\n\t// \t{\n\t// \t\tquestionText: <img src=\"https://castlehorsefeeds.com/wp-content/uploads/2019/03/spring-horses.jpg\" alt=\"r\"></img>,\n\t// \t\tanswerOptions: [\n\t// \t\t\t{ answerText: 'horse', isCorrect: true },\n\t// \t\t\t{ answerText: 'dog', isCorrect: false },\n\t// \t\t\t{ answerText: 'cat', isCorrect: false },\n\t// \t\t\t{ answerText: 'lion', isCorrect: false },\n\t// \t\t],\n\t// \t},\n\t// \t{\n\t// \t\tquestionText: <img src=\"https://www.hdnicewallpapers.com/Walls/Big/Lion/Lion_in_Gir_Forest_National_Park_India.jpg\" alt=\"o\"></img>,\n\t// \t\tanswerOptions: [\n\t// \t\t\t{ answerText: 'cat', isCorrect: false },\n\t// \t\t\t{ answerText: 'horse', isCorrect: false },\n\t// \t\t\t{ answerText: 'dog', isCorrect: false },\n\t// \t\t\t{ answerText: 'lion', isCorrect: true },\n\t// \t\t],\n\t// \t},\n\t// ];\n\t\n\n\t// const [currentQuestion, setCurrentQuestion] = useState(0);\n\t// const [showScore, setShowScore] = useState(false);\n\t// const [score, setScore] = useState(0);\n\n\t// const handleAnswerOptionClick = (isCorrect) => {\n\t// \tif (isCorrect) {\n\t// \t\tsetScore(score + 1);\n\t// \t}\n\n\t// \tconst nextQuestion = currentQuestion + 1;\n\t// \tif (nextQuestion < questions.length) {\n\t// \t\tsetCurrentQuestion(nextQuestion);\n\t// \t} else {\n\t// \t\tsetShowScore(true);\n\t// \t}\n\t// };\n\tconst Quiz = () => {\n\n\t\tconst allQuestions = data;\n\t\tconst [currentQuestionIndex, setCurrentQuestionIndex] = useState(0)\n\t\tconst [currentOptionSelected, setCurrentOptionSelected] = useState(null);\n\t\tconst [correctOption, setCorrectOption] = useState(null);\n\t\tconst [isOptionsDisabled, setIsOptionsDisabled] = useState(false);\n\t\tconst [score, setScore] = useState(0)\n\t\tconst [showNextButton, setShowNextButton] = useState(false)\n\t\tconst [showScoreModal, setShowScoreModal] = useState(false)\n\t\n\t\tconst validateAnswer = (selectedOption) => {\n\t\t\tlet correct_option = allQuestions[currentQuestionIndex]['correct_option'];\n\t\t\tsetCurrentOptionSelected(selectedOption);\n\t\t\tsetCorrectOption(correct_option);\n\t\t\tsetIsOptionsDisabled(true);\n\t\t\tif(selectedOption==correct_option){\n\t\t\t\t// Set Score\n\t\t\t\tsetScore(score+1)\n\t\t\t}\n\t\t\t// Show Next Button\n\t\t\tsetShowNextButton(true)\n\t\t}\n\t\tconst handleNext = () => {\n\t\t\tif(currentQuestionIndex== allQuestions.length-1){\n\t\t\t\t// Last Question\n\t\t\t\t// Show Score Modal\n\t\t\t\tsetShowScoreModal(true)\n\t\t\t}else{\n\t\t\t\tsetCurrentQuestionIndex(currentQuestionIndex+1);\n\t\t\t\tsetCurrentOptionSelected(null);\n\t\t\t\tsetCorrectOption(null);\n\t\t\t\tsetIsOptionsDisabled(false);\n\t\t\t\tsetShowNextButton(false);\n\t\t\t}\n\t\t\tAnimated.timing(progress, {\n\t\t\t\ttoValue: currentQuestionIndex+1,\n\t\t\t\tduration: 1000,\n\t\t\t\tuseNativeDriver: false\n\t\t\t}).start();\n\t\t}\n\t\tconst restartQuiz = () => {\n\t\t\tsetShowScoreModal(false);\n\t\n\t\t\tsetCurrentQuestionIndex(0);\n\t\t\tsetScore(0);\n\t\n\t\t\tsetCurrentOptionSelected(null);\n\t\t\tsetCorrectOption(null);\n\t\t\tsetIsOptionsDisabled(false);\n\t\t\tsetShowNextButton(false);\n\t\t\tAnimated.timing(progress, {\n\t\t\t\ttoValue: 0,\n\t\t\t\tduration: 1000,\n\t\t\t\tuseNativeDriver: false\n\t\t\t}).start();\n\t\t}\n\t\n\t\n\t\tconst Quiz = () => {\n\n\t\t\tconst allQuestions = data;\n\t\t\tconst [currentQuestionIndex, setCurrentQuestionIndex] = useState(0)\n\t\t\tconst [currentOptionSelected, setCurrentOptionSelected] = useState(null);\n\t\t\tconst [correctOption, setCorrectOption] = useState(null);\n\t\t\tconst [isOptionsDisabled, setIsOptionsDisabled] = useState(false);\n\t\t\tconst [score, setScore] = useState(0)\n\t\t\tconst [showNextButton, setShowNextButton] = useState(false)\n\t\t\tconst [showScoreModal, setShowScoreModal] = useState(false)\n\t\t\n\t\t\tconst validateAnswer = (selectedOption) => {\n\t\t\t\tlet correct_option = allQuestions[currentQuestionIndex]['correct_option'];\n\t\t\t\tsetCurrentOptionSelected(selectedOption);\n\t\t\t\tsetCorrectOption(correct_option);\n\t\t\t\tsetIsOptionsDisabled(true);\n\t\t\t\tif(selectedOption==correct_option){\n\t\t\t\t\t// Set Score\n\t\t\t\t\tsetScore(score+1)\n\t\t\t\t}\n\t\t\t\t// Show Next Button\n\t\t\t\tsetShowNextButton(true)\n\t\t\t}\n\t\t\tconst handleNext = () => {\n\t\t\t\tif(currentQuestionIndex== allQuestions.length-1){\n\t\t\t\t\t// Last Question\n\t\t\t\t\t// Show Score Modal\n\t\t\t\t\tsetShowScoreModal(true)\n\t\t\t\t}else{\n\t\t\t\t\tsetCurrentQuestionIndex(currentQuestionIndex+1);\n\t\t\t\t\tsetCurrentOptionSelected(null);\n\t\t\t\t\tsetCorrectOption(null);\n\t\t\t\t\tsetIsOptionsDisabled(false);\n\t\t\t\t\tsetShowNextButton(false);\n\t\t\t\t}\n\t\t\t\tAnimated.timing(progress, {\n\t\t\t\t\ttoValue: currentQuestionIndex+1,\n\t\t\t\t\tduration: 1000,\n\t\t\t\t\tuseNativeDriver: false\n\t\t\t\t}).start();\n\t\t\t}\n\t\t\tconst restartQuiz = () => {\n\t\t\t\tsetShowScoreModal(false);\n\t\t\n\t\t\t\tsetCurrentQuestionIndex(0);\n\t\t\t\tsetScore(0);\n\t\t\n\t\t\t\tsetCurrentOptionSelected(null);\n\t\t\t\tsetCorrectOption(null);\n\t\t\t\tsetIsOptionsDisabled(false);\n\t\t\t\tsetShowNextButton(false);\n\t\t\t\tAnimated.timing(progress, {\n\t\t\t\t\ttoValue: 0,\n\t\t\t\t\tduration: 1000,\n\t\t\t\t\tuseNativeDriver: false\n\t\t\t\t}).start();\n\t\t\t}\n\t\t\n\t\t\n\t\t\n\t\t\tconst renderQuestion = () => {\n\t\t\t\treturn (\n\t\t\t\t\t<View style={{\n\t\t\t\t\t\tmarginVertical: 40\n\t\t\t\t\t}}>\n\t\t\t\t\t\t{/* Question Counter */}\n\t\t\t\t\t\t<View style={{\n\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\talignItems: 'flex-end'\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<Text style={{color: COLORS.white, fontSize: 20, opacity: 0.6, marginRight: 2}}>{currentQuestionIndex+1}</Text>\n\t\t\t\t\t\t\t<Text style={{color: COLORS.white, fontSize: 18, opacity: 0.6}}>/ {allQuestions.length}</Text>\n\t\t\t\t\t\t</View>\n\t\t\n\t\t\t\t\t\t{/* Question */}\n\t\t\t\t\t\t<Text style={{\n\t\t\t\t\t\t\tcolor: COLORS.white,\n\t\t\t\t\t\t\tfontSize: 30\n\t\t\t\t\t\t}}>{allQuestions[currentQuestionIndex]?.question}</Text>\n\t\t\t\t\t</View>\n\t\t\t\t)\n\t\t\t}\n\t\t\tconst renderOptions = () => {\n\t\t\t\treturn (\n\t\t\t\t\t<View>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tallQuestions[currentQuestionIndex]?.options.map(option => (\n\t\t\t\t\t\t\t\t<TouchableOpacity \n\t\t\t\t\t\t\t\tonPress={()=> validateAnswer(option)}\n\t\t\t\t\t\t\t\tdisabled={isOptionsDisabled}\n\t\t\t\t\t\t\t\tkey={option}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tborderWidth: 3, \n\t\t\t\t\t\t\t\t\tborderColor: option==correctOption \n\t\t\t\t\t\t\t\t\t? COLORS.success\n\t\t\t\t\t\t\t\t\t: option==currentOptionSelected \n\t\t\t\t\t\t\t\t\t? COLORS.error \n\t\t\t\t\t\t\t\t\t: COLORS.secondary+'40',\n\t\t\t\t\t\t\t\t\tbackgroundColor: option==correctOption \n\t\t\t\t\t\t\t\t\t? COLORS.success +'20'\n\t\t\t\t\t\t\t\t\t: option==currentOptionSelected \n\t\t\t\t\t\t\t\t\t? COLORS.error +'20'\n\t\t\t\t\t\t\t\t\t: COLORS.secondary+'20',\n\t\t\t\t\t\t\t\t\theight: 60, borderRadius: 20,\n\t\t\t\t\t\t\t\t\tflexDirection: 'row',\n\t\t\t\t\t\t\t\t\talignItems: 'center', justifyContent: 'space-between',\n\t\t\t\t\t\t\t\t\tpaddingHorizontal: 20,\n\t\t\t\t\t\t\t\t\tmarginVertical: 10\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Text style={{fontSize: 20, color: COLORS.white}}>{option}</Text>\n\t\t\n\t\t\t\t\t\t\t\t\t{/* Show Check Or Cross Icon based on correct answer*/}\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\toption==correctOption ? (\n\t\t\t\t\t\t\t\t\t\t\t<View style={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: 30, height: 30, borderRadius: 30/2,\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: COLORS.success,\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center', alignItems: 'center'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<MaterialCommunityIcons name=\"check\" style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: COLORS.white,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: 20\n\t\t\t\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t\t\t): option == currentOptionSelected ? (\n\t\t\t\t\t\t\t\t\t\t\t<View style={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: 30, height: 30, borderRadius: 30/2,\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: COLORS.error,\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center', alignItems: 'center'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<MaterialCommunityIcons name=\"close\" style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: COLORS.white,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: 20\n\t\t\t\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</View>\n\t\t\t\t)\n\t\t\t}\n\t\t\tconst renderNextButton = () => {\n\t\t\t\tif(showNextButton){\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\tonPress={handleNext}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginTop: 20, width: '100%', backgroundColor: COLORS.accent, padding: 20, borderRadius: 5\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<Text style={{fontSize: 20, color: COLORS.white, textAlign: 'center'}}>Next</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t)\n\t\t\t\t}else{\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\n\t\t\tconst [progress, setProgress] = useState(new Animated.Value(0));\n\t\t\tconst progressAnim = progress.interpolate({\n\t\t\t\tinputRange: [0, allQuestions.length],\n\t\t\t\toutputRange: ['0%','100%']\n\t\t\t})\n\t\t\tconst renderProgressBar = () => {\n\t\t\t\treturn (\n\t\t\t\t\t<View style={{\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\theight: 20,\n\t\t\t\t\t\tborderRadius: 20,\n\t\t\t\t\t\tbackgroundColor: '#00000020',\n\t\t\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Animated.View style={[{\n\t\t\t\t\t\t\theight: 20,\n\t\t\t\t\t\t\tborderRadius: 20,\n\t\t\t\t\t\t\tbackgroundColor: COLORS.accent\n\t\t\t\t\t\t},{\n\t\t\t\t\t\t\twidth: progressAnim\n\t\t\t\t\t\t}]}>\n\t\t\n\t\t\t\t\t\t</Animated.View>\n\t\t\n\t\t\t\t\t</View>\n\t\t\t\t)\n\t\t\t}\n\t\t\n\t\t\n\t\t\treturn (\n\t\t\t   <SafeAreaView style={{\n\t\t\t\t   flex: 1\n\t\t\t   }}>\n\t\t\t\t   <StatusBar barStyle=\"light-content\" backgroundColor={COLORS.primary} />\n\t\t\t\t   <View style={{\n\t\t\t\t\t   flex: 1,\n\t\t\t\t\t   paddingVertical: 40,\n\t\t\t\t\t   paddingHorizontal: 16,\n\t\t\t\t\t   backgroundColor: COLORS.background,\n\t\t\t\t\t   position:'relative'\n\t\t\t\t   }}>\n\t\t\n\t\t\t\t\t   {/* ProgressBar */}\n\t\t\t\t\t   { renderProgressBar() }\n\t\t\n\t\t\t\t\t   {/* Question */}\n\t\t\t\t\t   {renderQuestion()}\n\t\t\n\t\t\t\t\t   {/* Options */}\n\t\t\t\t\t   {renderOptions()}\n\t\t\n\t\t\t\t\t   {/* Next Button */}\n\t\t\t\t\t   {renderNextButton()}\n\t\t\n\t\t\t\t\t   {/* Score Modal */}\n\t\t\t\t\t   <Modal\n\t\t\t\t\t   animationType=\"slide\"\n\t\t\t\t\t   transparent={true}\n\t\t\t\t\t   visible={showScoreModal}\n\t\t\t\t\t   >\n\t\t\t\t\t\t   <View style={{\n\t\t\t\t\t\t\t   flex: 1,\n\t\t\t\t\t\t\t   backgroundColor: COLORS.primary,\n\t\t\t\t\t\t\t   alignItems: 'center',\n\t\t\t\t\t\t\t   justifyContent: 'center'\n\t\t\t\t\t\t   }}>\n\t\t\t\t\t\t\t   <View style={{\n\t\t\t\t\t\t\t\t   backgroundColor: COLORS.white,\n\t\t\t\t\t\t\t\t   width: '90%',\n\t\t\t\t\t\t\t\t   borderRadius: 20,\n\t\t\t\t\t\t\t\t   padding: 20,\n\t\t\t\t\t\t\t\t   alignItems: 'center'\n\t\t\t\t\t\t\t   }}>\n\t\t\t\t\t\t\t\t   <Text style={{fontSize: 30, fontWeight: 'bold'}}>{ score> (allQuestions.length/2) ? 'Congratulations!' : 'Oops!' }</Text>\n\t\t\n\t\t\t\t\t\t\t\t   <View style={{\n\t\t\t\t\t\t\t\t\t   flexDirection: 'row',\n\t\t\t\t\t\t\t\t\t   justifyContent: 'flex-start',\n\t\t\t\t\t\t\t\t\t   alignItems: 'center',\n\t\t\t\t\t\t\t\t\t   marginVertical: 20\n\t\t\t\t\t\t\t\t   }}>\n\t\t\t\t\t\t\t\t\t   <Text style={{\n\t\t\t\t\t\t\t\t\t\t   fontSize: 30,\n\t\t\t\t\t\t\t\t\t\t   color: score> (allQuestions.length/2) ? COLORS.success : COLORS.error\n\t\t\t\t\t\t\t\t\t   }}>{score}</Text>\n\t\t\t\t\t\t\t\t\t\t<Text style={{\n\t\t\t\t\t\t\t\t\t\t\tfontSize: 20, color: COLORS.black\n\t\t\t\t\t\t\t\t\t\t}}>/ { allQuestions.length }</Text>\n\t\t\t\t\t\t\t\t   </View>\n\t\t\t\t\t\t\t\t   {/* Retry Quiz button */}\n\t\t\t\t\t\t\t\t   <TouchableOpacity\n\t\t\t\t\t\t\t\t   onPress={restartQuiz}\n\t\t\t\t\t\t\t\t   style={{\n\t\t\t\t\t\t\t\t\t   backgroundColor: COLORS.accent,\n\t\t\t\t\t\t\t\t\t   padding: 20, width: '100%', borderRadius: 20\n\t\t\t\t\t\t\t\t   }}>\n\t\t\t\t\t\t\t\t\t   <Text style={{\n\t\t\t\t\t\t\t\t\t\t   textAlign: 'center', color: COLORS.white, fontSize: 20\n\t\t\t\t\t\t\t\t\t   }}>Retry Quiz</Text>\n\t\t\t\t\t\t\t\t   </TouchableOpacity>\n\t\t\n\t\t\t\t\t\t\t   </View>\n\t\t\n\t\t\t\t\t\t   </View>\n\t\t\t\t\t   </Modal>\n\t\t\n\t\t\t\t\t   {/* Background Image */}\n\t\t\t\t\t   <Image\n\t\t\t\t\t\t// source={require('')}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: SIZES.width,\n\t\t\t\t\t\t\theight: 130,\n\t\t\t\t\t\t\tzIndex: -1,\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t\topacity: 0.5\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tresizeMode={'contain'}\n\t\t\t\t\t\t/>\n\t\t\n\t\t\t\t   </View>\n\t\t\t   </SafeAreaView>\n\t\t\t)\n\t\t}\n\t\t\n}}"]},"metadata":{},"sourceType":"module"}