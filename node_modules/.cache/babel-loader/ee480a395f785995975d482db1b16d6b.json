{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\neetu\\\\kids_quiz\\\\src\\\\components\\\\quizGeneral\\\\QuizGeneral.jsx\";\nimport React, { useState } from 'react';\nimport { StQuizGeneral } from './QuizGeneralStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  var _s = $RefreshSig$();\n\n  const questions = [{\n    questionText: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://d.newsweek.com/en/full/1529160/elephant-appreciation-day-2019.jpg\",\n      alt: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 18\n    }, this),\n    answerOptions: [{\n      answerText: 'cat',\n      isCorrect: false\n    }, {\n      answerText: 'dog',\n      isCorrect: false\n    }, {\n      answerText: 'elephant',\n      isCorrect: true\n    }, {\n      answerText: 'lion',\n      isCorrect: false\n    }]\n  }, {\n    questionText: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://hddesktopwallpapers.in/wp-content/uploads/2015/09/cat-eyes-cute.jpg\",\n      alt: \"e\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 18\n    }, this),\n    answerOptions: [{\n      answerText: 'lion',\n      isCorrect: false\n    }, {\n      answerText: 'cat',\n      isCorrect: true\n    }, {\n      answerText: 'horse',\n      isCorrect: false\n    }, {\n      answerText: 'dog',\n      isCorrect: false\n    }]\n  }, {\n    questionText: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://castlehorsefeeds.com/wp-content/uploads/2019/03/spring-horses.jpg\",\n      alt: \"r\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 18\n    }, this),\n    answerOptions: [{\n      answerText: 'horse',\n      isCorrect: true\n    }, {\n      answerText: 'dog',\n      isCorrect: false\n    }, {\n      answerText: 'cat',\n      isCorrect: false\n    }, {\n      answerText: 'lion',\n      isCorrect: false\n    }]\n  }, {\n    questionText: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://www.hdnicewallpapers.com/Walls/Big/Lion/Lion_in_Gir_Forest_National_Park_India.jpg\",\n      alt: \"o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 18\n    }, this),\n    answerOptions: [{\n      answerText: 'cat',\n      isCorrect: false\n    }, {\n      answerText: 'horse',\n      isCorrect: false\n    }, {\n      answerText: 'dog',\n      isCorrect: false\n    }, {\n      answerText: 'lion',\n      isCorrect: true\n    }]\n  }];\n\n  function optionSelected(answer) {\n    _s();\n\n    clearInterval(counter); //clear counter\n\n    clearInterval(counterLine); //clear counterLine\n\n    let userAns = answer.textContent; //getting user selected option\n\n    let correcAns = questions[que_count].answer; //getting correct answer from array\n\n    const allOptions = option_list.children.length; //getting all option items\n\n    if (userAns == correcAns) {\n      //if user selected option is equal to array's correct answer\n      userScore += 1; //upgrading score value with 1\n\n      answer.classList.add(\"correct\"); //adding green color to correct selected option\n\n      answer.insertAdjacentHTML(\"beforeend\", tickIconTag); //adding tick icon to correct selected option\n\n      console.log(\"Correct Answer\");\n      console.log(\"Your correct answers = \" + userScore);\n    } else {\n      answer.classList.add(\"incorrect\"); //adding red color to correct selected option\n\n      answer.insertAdjacentHTML(\"beforeend\", crossIconTag); //adding cross icon to correct selected option\n\n      console.log(\"Wrong Answer\");\n      const [currentQuestion, setCurrentQuestion] = useState(0);\n      const [showScore, setShowScore] = useState(false);\n      const [score, setScore] = useState(0);\n    }\n  }\n\n  _s(optionSelected, \"0BtWTSV6WaEEISJY2tt5d47HMss=\");\n\n  const handleAnswerOptionClick = (isCorrect, e) => {\n    if (isCorrect) {\n      setScore(score + 1);\n      e.target.classList.add(isCorrect ? \"correct\" : \"incorrect\");\n      const nextQuestion = currentQuestion + 1;\n\n      if (nextQuestion < questions.length) {\n        setCurrentQuestion(nextQuestion);\n      } else {\n        setShowScore(true);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StQuizGeneral, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-section\",\n        children: [\"You scored \", score, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-count\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Question \", currentQuestion + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 8\n            }, this), \"/\", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-text\",\n            children: questions[currentQuestion].questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer-section\",\n          children: questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handleAnswerOptionClick(answerOption.isCorrect, e),\n            children: answerOption.answerText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/neetu/kids_quiz/src/components/quizGeneral/QuizGeneral.jsx"],"names":["React","useState","StQuizGeneral","App","questions","questionText","answerOptions","answerText","isCorrect","optionSelected","answer","clearInterval","counter","counterLine","userAns","textContent","correcAns","que_count","allOptions","option_list","children","length","userScore","classList","add","insertAdjacentHTML","tickIconTag","console","log","crossIconTag","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","handleAnswerOptionClick","e","target","nextQuestion","map","answerOption"],"mappings":"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","sourcesContent":["\n\nimport React, { useState } from 'react';\nimport { StQuizGeneral } from './QuizGeneralStyle';\nexport default function App() {\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: <img src=\"https://d.newsweek.com/en/full/1529160/elephant-appreciation-day-2019.jpg\" alt=\"error\"></img>,\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'cat', isCorrect: false },\n\t\t\t\t{ answerText: 'dog', isCorrect: false },\n\t\t\t\t{ answerText: 'elephant', isCorrect: true },\n\t\t\t\t{ answerText: 'lion', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: <img src=\"https://hddesktopwallpapers.in/wp-content/uploads/2015/09/cat-eyes-cute.jpg\" alt=\"e\"></img>,\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'lion', isCorrect: false },\n\t\t\t\t{ answerText: 'cat', isCorrect: true },\n\t\t\t\t{ answerText: 'horse', isCorrect: false },\n\t\t\t\t{ answerText: 'dog', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: <img src=\"https://castlehorsefeeds.com/wp-content/uploads/2019/03/spring-horses.jpg\" alt=\"r\"></img>,\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'horse', isCorrect: true },\n\t\t\t\t{ answerText: 'dog', isCorrect: false },\n\t\t\t\t{ answerText: 'cat', isCorrect: false },\n\t\t\t\t{ answerText: 'lion', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: <img src=\"https://www.hdnicewallpapers.com/Walls/Big/Lion/Lion_in_Gir_Forest_National_Park_India.jpg\" alt=\"o\"></img>,\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'cat', isCorrect: false },\n\t\t\t\t{ answerText: 'horse', isCorrect: false },\n\t\t\t\t{ answerText: 'dog', isCorrect: false },\n\t\t\t\t{ answerText: 'lion', isCorrect: true },\n\t\t\t],\n\t\t},\n\t];\n\tfunction optionSelected(answer){\n\t\tclearInterval(counter); //clear counter\n\t\tclearInterval(counterLine); //clear counterLine\n\t\tlet userAns = answer.textContent; //getting user selected option\n\t\tlet correcAns = questions[que_count].answer; //getting correct answer from array\n\t\tconst allOptions = option_list.children.length; //getting all option items\n\t\t\n\t\tif(userAns == correcAns){ //if user selected option is equal to array's correct answer\n\t\t\tuserScore += 1; //upgrading score value with 1\n\t\t\tanswer.classList.add(\"correct\"); //adding green color to correct selected option\n\t\t\tanswer.insertAdjacentHTML(\"beforeend\", tickIconTag); //adding tick icon to correct selected option\n\t\t\tconsole.log(\"Correct Answer\");\n\t\t\tconsole.log(\"Your correct answers = \" + userScore);\n\t\t}else{\n\t\t\tanswer.classList.add(\"incorrect\"); //adding red color to correct selected option\n\t\t\tanswer.insertAdjacentHTML(\"beforeend\", crossIconTag); //adding cross icon to correct selected option\n\t\t\tconsole.log(\"Wrong Answer\");\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\t\t}}\n\tconst handleAnswerOptionClick = (isCorrect,e) => {\n\t\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\te.target.classList.add(isCorrect ? \"correct\" : \"incorrect\");\n\t\t\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\t\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\t\n\t\t\tsetShowScore(true);\n\t\t}\n\t}\n\t\n\n\t\t\n\t\n\t};\n\t\n\treturn (\n    <StQuizGeneral>\n\t\t<div className='app'>\n\t\t\t{showScore ? (\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {score} out of {questions.length}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={(e) => handleAnswerOptionClick(answerOption.isCorrect,e)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n    </StQuizGeneral>\n\t);\n}"]},"metadata":{},"sourceType":"module"}